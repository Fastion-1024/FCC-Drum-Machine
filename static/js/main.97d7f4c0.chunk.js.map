{"version":3,"sources":["hooks/useToggle.js","hooks/useLocalStorage.js","lib/Data.js","hooks/context.js","hooks/useProgressSlider.js","components/VolumeDisplay/VolumeDisplay.js","components/ToggleDisplay/ToggleDisplay.js","components/Display/Display.js","components/AudioButton/AudioButton.js","components/DrumPad/DrumPad.js","components/ToggleButton/ToggleButton.js","components/DrumMachine/DrumMachine.js","components/App/App.js","index.js"],"names":["useToggle","initialState","toggleState","useState","state","setState","toggle","useCallback","useLocalStorage","key","retrieved","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","keybinds","value","code","bankOne","name","bank","url","bankTwo","AppContext","React","createContext","useGlobalContext","useContext","AppProvider","children","buttons","activeBank","toggleActiveBank","power","togglePower","display","setDisplay","volume","setVolume","timeoutRef","useRef","Provider","updateDisplay","current","clearTimeout","setTimeout","useProgressSlider","ref","console","log","style","setProperty","min","max","addEventListener","removeEventListener","VolumeDisplay","disabled","getClassName","index","id","className","ToggleDisplay","activeBankName","Display","AudioButton","keybind","audioName","audioSource","audioRef","playSound","currentTime","play","handleKeyDown","e","preventDefault","document","onClick","preload","src","DrumPad","map","btn","ToggleButton","checked","onChange","htmlFor","type","DrumMachine","volumeProgressRef","step","target","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97d7f4c0.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\n// Hook\r\n// Will toggle between the two parameters.\r\n// Defaults to booleans if no parameters are passed.\r\nconst useToggle = (initialState = true, toggleState = false) => {\r\n    const [state, setState] = useState(initialState);\r\n\r\n    // Define and memorize toggler function in case we pass down the component,\r\n    // This function changes the state between the two parameters or boolean values.\r\n    const toggle = useCallback(() => {\r\n        setState((state) => (state === initialState ? toggleState : initialState));\r\n    }, []);\r\n\r\n    return [state, toggle];\r\n};\r\n\r\nexport default useToggle;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useLocalStorage = (key, initialState) => {\r\n    // Initialise state from either parameter or localStorage\r\n    const [state, setState] = useState(() => {\r\n        const retrieved = localStorage.getItem(key);\r\n        return retrieved ? JSON.parse(retrieved) : initialState;\r\n    });\r\n\r\n    // Save state to local storage on change.\r\n    useEffect(() => {\r\n        if (state) {\r\n            localStorage.setItem(key, JSON.stringify(state));\r\n        }\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","export const keybinds = [\r\n    {\r\n        value: 'Q',\r\n        code: 'KeyQ',\r\n    },\r\n    {\r\n        value: 'W',\r\n        code: 'KeyW',\r\n    },\r\n    {\r\n        value: 'E',\r\n        code: 'KeyE',\r\n    },\r\n    {\r\n        value: 'A',\r\n        code: 'KeyA',\r\n    },\r\n    {\r\n        value: 'S',\r\n        code: 'KeyS',\r\n    },\r\n    {\r\n        value: 'D',\r\n        code: 'KeyD',\r\n    },\r\n    {\r\n        value: 'Z',\r\n        code: 'KeyZ',\r\n    },\r\n    {\r\n        value: 'X',\r\n        code: 'KeyX',\r\n    },\r\n    {\r\n        value: 'C',\r\n        code: 'KeyC',\r\n    },\r\n];\r\n\r\nexport const bankOne = {\r\n    name: 'Bank 1',\r\n    bank: [\r\n        {\r\n            name: 'Heater-1',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\r\n        },\r\n        {\r\n            name: 'Heater-2',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\r\n        },\r\n        {\r\n            name: 'Heater-3',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\r\n        },\r\n        {\r\n            name: 'Heater-4',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\r\n        },\r\n        {\r\n            name: 'Clap',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\r\n        },\r\n        {\r\n            name: 'Open-HH',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\r\n        },\r\n        {\r\n            name: \"Kick-n'Hat\",\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\r\n        },\r\n        {\r\n            name: 'Kick',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\r\n        },\r\n        {\r\n            name: 'Closed-HH',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\r\n        },\r\n    ],\r\n};\r\n\r\nexport const bankTwo = {\r\n    name: 'Bank 2',\r\n    bank: [\r\n        {\r\n            name: 'Chord-1',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',\r\n        },\r\n        {\r\n            name: 'Chord-2',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',\r\n        },\r\n        {\r\n            name: 'Chord-3',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',\r\n        },\r\n        {\r\n            name: 'Shaker',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',\r\n        },\r\n        {\r\n            name: 'Open-HH',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',\r\n        },\r\n        {\r\n            name: 'Closed-HH',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',\r\n        },\r\n        {\r\n            name: 'Punchy-Kick',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',\r\n        },\r\n        {\r\n            name: 'Side-Stick',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',\r\n        },\r\n        {\r\n            name: 'Snare',\r\n            url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',\r\n        },\r\n    ],\r\n};\r\n","// Hooks\r\nimport React, { useContext, useState, useRef } from 'react';\r\nimport useToggle from './useToggle';\r\nimport useLocalStorage from './useLocalStorage';\r\n// Data\r\nimport { keybinds, bankOne, bankTwo } from '../lib/Data';\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n    const [buttons, setButtons] = useLocalStorage('keybinds', keybinds);\r\n    const [activeBank, toggleActiveBank] = useToggle(bankOne, bankTwo);\r\n    const [power, togglePower] = useToggle(false, true);\r\n    const [display, setDisplay] = useState('');\r\n    const [volume, setVolume] = useState(50);\r\n    const timeoutRef = useRef(null);\r\n\r\n    const resetKeybinds = () => {\r\n        setButtons(keybinds);\r\n    };\r\n\r\n    const updateKeybind = (oldKey, newKey) => {\r\n        const index = buttons.findIndex((btn) => btn.value === oldKey.value);\r\n        if (index) {\r\n            setButtons([...buttons].splice(index, 1, newKey));\r\n        }\r\n    };\r\n\r\n    const updateDisplay = (value) => {\r\n        // Clear old timeout and ref\r\n        if (timeoutRef && timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n            timeoutRef.current = null;\r\n        }\r\n\r\n        setDisplay(value);\r\n        timeoutRef.current = setTimeout(() => {\r\n            updateDisplay('');\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                buttons,\r\n                activeBank,\r\n                toggleActiveBank,\r\n                power,\r\n                togglePower,\r\n                display,\r\n                volume,\r\n                setVolume,\r\n                updateDisplay,\r\n            }}\r\n        >\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext);\r\n};\r\n\r\nexport default AppProvider;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nconst useProgressSlider = () => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        // Make sure ref is not null\r\n        if (ref && ref.current) {\r\n            console.log('FIRED 1');\r\n            ref.current.style.setProperty('--value', ref.current.value);\r\n            ref.current.style.setProperty('--min', ref.current.min == '' ? '0' : ref.current.min);\r\n            ref.current.style.setProperty('--max', ref.current.max == '' ? '100' : ref.current.max);\r\n            ref.current.addEventListener('input', () => {\r\n                console.log('FIRED 2');\r\n                ref.current.style.setProperty('--value', ref.current.value);\r\n            });\r\n        }\r\n\r\n        return () => {\r\n            ref.current.removeEventListener('input', () => {\r\n                console.log('FIRED 2');\r\n                ref.current.style.setProperty('--value', ref.current.value);\r\n            });\r\n        };\r\n    }, [ref]);\r\n\r\n    return [ref];\r\n};\r\n\r\nexport default useProgressSlider;\r\n","import './VolumeDisplay.css';\r\nconst VolumeDisplay = ({ value, disabled }) => {\r\n    const current = value / 10;\r\n\r\n    const getClassName = (index) => {\r\n        if (disabled) return 'volume-indicator disabled';\r\n        return `${index < current ? 'volume-indicator active' : 'volume-indicator'}`;\r\n    };\r\n\r\n    return (\r\n        <div id='volume'>\r\n            <span className={getClassName(0)} />\r\n            <span className={getClassName(1)} />\r\n            <span className={getClassName(2)} />\r\n            <span className={getClassName(3)} />\r\n            <span className={getClassName(4)} />\r\n            <span className={getClassName(5)} />\r\n            <span className={getClassName(6)} />\r\n            <span className={getClassName(7)} />\r\n            <span className={getClassName(8)} />\r\n            <span className={getClassName(9)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VolumeDisplay;\r\n","import React from 'react';\r\n\r\nconst ToggleDisplay = ({ disabled, activeBankName }) => {\r\n    const getClassName = (id) => {\r\n        if (disabled) return 'bank-indicator disabled';\r\n        return `${activeBankName === id ? 'bank-indicator active' : 'bank-indicator'}`;\r\n    };\r\n\r\n    return (\r\n        <div id='toggle-display-container'>\r\n            <h4 className={getClassName('Bank 1')}>Bank1</h4>\r\n            <h4 className={getClassName('Bank 2')}>Bank2</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleDisplay;\r\n","import './Display.css';\r\nimport VolumeDisplay from '../VolumeDisplay/VolumeDisplay';\r\nimport ToggleDisplay from '../ToggleDisplay/ToggleDisplay';\r\nimport { useGlobalContext } from '../../hooks/context';\r\n\r\nconst Display = () => {\r\n    const { display, volume, power, activeBank } = useGlobalContext();\r\n\r\n    return (\r\n        <div id='display-container'>\r\n            <VolumeDisplay value={volume} disabled={!power} />\r\n            <ToggleDisplay disabled={!power} activeBankName={activeBank.name} />\r\n            <h2 id='display'>{display}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Display;\r\n","import { useRef, useEffect } from 'react';\r\nimport './AudioButton.css';\r\n\r\nconst AudioButton = ({\r\n    value,\r\n    keybind,\r\n    audioName,\r\n    audioSource,\r\n    disabled,\r\n    volume,\r\n    updateDisplay,\r\n}) => {\r\n    const audioRef = useRef(null);\r\n\r\n    const playSound = () => {\r\n        if (audioRef) {\r\n            audioRef.current.volume = volume / 100;\r\n            audioRef.current.currentTime = 0;\r\n            audioRef.current.play();\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        playSound();\r\n        updateDisplay(audioName);\r\n    };\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.code === keybind && !disabled) {\r\n            e.preventDefault();\r\n            playSound();\r\n            updateDisplay(audioName);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [volume, disabled]);\r\n\r\n    return (\r\n        <button\r\n            id={audioName}\r\n            className={`${disabled ? 'drum-pad disabled' : 'drum-pad'} `}\r\n            onClick={handleClick}\r\n            disabled={disabled}\r\n        >\r\n            <audio id={value} className='clip' preload='auto' src={audioSource} ref={audioRef} />\r\n            {value}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default AudioButton;\r\n","import React from 'react';\r\nimport { useGlobalContext } from '../../hooks/context';\r\nimport AudioButton from '../AudioButton/AudioButton';\r\nimport './DrumPad.css';\r\n\r\nconst DrumPad = () => {\r\n    const { buttons, activeBank, power, volume, updateDisplay } = useGlobalContext();\r\n\r\n    return (\r\n        <div className='drum-pad-container'>\r\n            {buttons.map((btn, index) => {\r\n                return (\r\n                    <AudioButton\r\n                        key={index}\r\n                        value={btn.value}\r\n                        keybind={btn.code}\r\n                        audioSource={activeBank.bank[index].url}\r\n                        audioName={activeBank.bank[index].name}\r\n                        updateDisplay={updateDisplay}\r\n                        disabled={!power}\r\n                        volume={volume}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrumPad;\r\n","import './ToggleButton.css';\r\nconst ToggleButton = ({ id, name, checked, onChange, disabled = false }) => {\r\n    return (\r\n        <div id={id} className='toggle-button-container'>\r\n            <label className='switch-label' htmlFor={`${id}-checkbox`}>\r\n                {name}\r\n            </label>\r\n            <label className='switch' disabled={disabled}>\r\n                <input\r\n                    id={`${id}-checkbox`}\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                    disabled={disabled}\r\n                />\r\n                <span className='slider' />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleButton;\r\n","// Components\r\nimport { useGlobalContext } from '../../hooks/context';\r\nimport useProgressSlider from '../../hooks/useProgressSlider';\r\nimport Display from '../Display/Display';\r\nimport DrumPad from '../DrumPad/DrumPad';\r\nimport ToggleButton from '../ToggleButton/ToggleButton';\r\n// Stylsheets\r\nimport './DrumMachine.css';\r\n\r\nconst DrumMachine = () => {\r\n    const { power, togglePower, activeBank, toggleActiveBank, volume, setVolume, updateDisplay } =\r\n        useGlobalContext();\r\n\r\n    const [volumeProgressRef] = useProgressSlider();\r\n\r\n    return (\r\n        <section id='drum-machine'>\r\n            <Display />\r\n            <ToggleButton\r\n                id='power'\r\n                name={'Power'}\r\n                checked={power}\r\n                onChange={() => {\r\n                    togglePower();\r\n                    updateDisplay(power ? 'Goodbye' : 'Hello');\r\n                }}\r\n            />\r\n            <ToggleButton\r\n                id='bank'\r\n                name={'Bank'}\r\n                checked={activeBank.name === 'Bank 2'}\r\n                onChange={toggleActiveBank}\r\n                disabled={!power}\r\n            />\r\n            <input\r\n                className='volume-slider styled-slider slider-progress'\r\n                type='range'\r\n                min={0}\r\n                max={100}\r\n                step={10}\r\n                value={volume}\r\n                onChange={(e) => setVolume(e.target.value)}\r\n                disabled={!power}\r\n                ref={volumeProgressRef}\r\n            />\r\n            <DrumPad />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default DrumMachine;\r\n","import DrumMachine from '../DrumMachine/DrumMachine';\nimport './App.css';\n\nfunction App() {\n    return (\n        <main>\n            <DrumMachine />\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport AppProvider from './hooks/context';\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppProvider>\n            <App />\n        </AppProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}